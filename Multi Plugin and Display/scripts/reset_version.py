###########################################################################
# RESET VERSION                                                           #
# Run this script to revert the version number of the firmware to         #
# 1.0.0.1                                                                 #
###########################################################################

try:
  Import("env") # type: ignore
  current_env = env["PIOENV"] # type: ignore
  project_path = env["PROJECT_DIR"] #type: ignore
  error = '\033[0;31m'
  warning = '\033[0;33m'
  report = '\033[0;32m'
  info = '\033[0;30m'
except:
  error = '[error] '
  warning = '[warning] '
  report = ''
  info = '[info] '

print(report + 'running \'reset_version.py\'...')

FILEPATH_VERSION_H = 'include/version.h'

version_major = 1
version_minor = 0
version_fix = 0
version_build = 1
author = ""
git_commit = "main"
git_branch = "HEAD"
date_time = ""

header_contents = '''/**
 * @file version.h
 * @brief Project Version. DO NOT EDIT THIS FILE DIRECTLY (Edited in "scripts/update_version.py")
 * 
 */

#ifndef SOFTWARE_VERSION_MAJOR
  #define SOFTWARE_VERSION_MAJOR {}
#endif
#ifndef SOFTWARE_VERSION_MINOR
  #define SOFTWARE_VERSION_MINOR {}
#endif
#ifndef SOFTWARE_VERSION_FIX
  #define SOFTWARE_VERSION_FIX {}
#endif
#ifndef SOFTWARE_VERSION_BUILD
  #define SOFTWARE_VERSION_BUILD {}
#endif
#ifndef SOFTWARE_BUILD_TIME
  #define SOFTWARE_BUILD_TIME "{}"
#endif
#ifndef SOFTWARE_AUTHOR
  #define SOFTWARE_AUTHOR "{}"
#endif
#ifndef SOFTWARE_GIT_COMMIT
  #define SOFTWARE_GIT_COMMIT "{}->{}"
#endif
'''.format(version_major, version_minor, version_fix, version_build, date_time, author, git_branch, git_commit)

with open(FILEPATH_VERSION_H, 'w+') as f:
  f.write(header_contents)

print(report + '\'version.h\' has been reset to default')